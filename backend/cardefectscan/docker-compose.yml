version: '3.8'

services:
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8081:8080"
    environment:
      SWAGGER_JSON: /swagger.yaml
    volumes:
      - ./src/main/resources/cardefectscan.yaml:/swagger.yaml:ro

  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    environment:
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://db:5432/cardefectscan
      - LIQUIBASE_COMMAND_USERNAME=${POSTGRES_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${POSTGRES_PASSWORD}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=/changelog/db.changelog-master.xml
    volumes:
      - ./liquibase/changelog:/liquibase/changelog:ro
    depends_on:
      db:
        condition: service_healthy
    entrypoint: [ "liquibase", "update" ]

  db:
    image: postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: cardefectscan
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d cardefectscan" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio_data:/data
    command: server --console-address ":9001" /data
    restart: unless-stopped

  # Создание бакета после запуска MinIO
  minio-create-bucket:
    image: minio/mc
    container_name: minio-create-bucket
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb --ignore-existing local/${MINIO_BUCKET_NAME};
      mc policy set public local/${MINIO_BUCKET_NAME};
      exit 0;
      "