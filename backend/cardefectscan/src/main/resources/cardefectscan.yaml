openapi: 3.0.2
servers:
  - url: http://localhost:8080
  - url: https://localhost/backend
info:
  description: CarDefectScan API
  version: 0.1.0
  title: CarDefectScan - OpenAPI 3.0
tags:
  - name: Auth
    description: Operations with user account
  - name: Images
    description: Operations with images
  - name: Generations
    description: Operations with processed (or currently being in process) images

paths:
  /api/v1/auth/signup:
    post:
      tags:
        - Auth
      summary: User Sign Up
      description: Sign Up user and sets JWT and refresh token in cookies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        "200":
          description: Successful signup, refresh token set in cookies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          headers:
            Set-Cookie:
              description: "HttpOnly Secure cookies with access and refresh tokens"
              schema:
                type: string
        "400":
          description: Non unique username or inappropriate password

  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Authenticates user and sets JWT and refresh token in cookies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Successful login, refresh token set in cookies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          headers:
            Set-Cookie:
              description: "HttpOnly Secure cookies with access and refresh tokens"
              schema:
                type: string
        "401":
          description: Unauthorized - wrong username or password

  /api/v1/auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh access token
      description: Uses refresh token from cookie to generate a new access token
      security:
        - cookieAuth: [ ]
      responses:
        "200":
          description: New refresh token issued, set in cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          headers:
            Set-Cookie:
              description: "HttpOnly Secure cookie with new access token"
              schema:
                type: string
        "401":
          description: Invalid or expired refresh token

  /api/v1/auth/logout:
    post:
      tags:
        - Auth
      summary: Logout user
      description: Revokes refresh token and clears cookies
      security:
        - cookieAuth: [ ]
      responses:
        "200":
          description: Logout successful, cookies cleared
          headers:
            Set-Cookie:
              description: "Clears authentication cookies"
              schema:
                type: string
        "401":
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: refresh_token

  schemas:
    SignupRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    TokenResponse:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
